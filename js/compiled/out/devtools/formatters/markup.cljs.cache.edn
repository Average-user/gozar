{:rename-macros {}, :renames {}, :externs {RegExp {}, Error {}}, :use-macros {safe-call devtools.util, emit-markup-db devtools.formatters.markup, oset devtools.util, oget devtools.util, ocall devtools.util, oapply devtools.util}, :excludes #{}, :name devtools.formatters.markup, :imports nil, :requires {devtools.formatters.helpers devtools.formatters.helpers, devtools.formatters.printing devtools.formatters.printing, devtools.formatters.state devtools.formatters.state, devtools.formatters.templating devtools.formatters.templating, munging devtools.munging, devtools.munging devtools.munging}, :uses {expandable? devtools.formatters.helpers, should-render? devtools.formatters.helpers, set-managed-print-level devtools.formatters.state, bool? devtools.formatters.helpers, cljs-instance? devtools.formatters.helpers, get-surrogate-body devtools.formatters.templating, get-constructor devtools.formatters.helpers, managed-print-via-writer devtools.formatters.printing, pref devtools.formatters.helpers, wrap-arity devtools.formatters.helpers, cljs-function? devtools.formatters.helpers, get-more-marker devtools.formatters.helpers, fetch-fields-values devtools.formatters.helpers, managed-print-via-protocol devtools.formatters.printing, abbreviated? devtools.formatters.helpers, get-surrogate-header devtools.formatters.templating, reset-depth-limits devtools.formatters.state, get-surrogate-target devtools.formatters.templating, set-prevent-recursion devtools.formatters.state, get-surrogate-start-index devtools.formatters.templating, abbreviate-long-string devtools.formatters.helpers, cljs-type? devtools.formatters.helpers, should-render-instance? devtools.formatters.helpers}, :defs {<aligned-body> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 118, :column 7, :end-line 118, :end-column 21, :arglists (quote ([markups-lists]))}, :name devtools.formatters.markup/<aligned-body>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 21, :method-params ([markups-lists]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markups-lists]))}, <native-reference> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 57, :column 7, :end-line 57, :end-column 25, :arglists (quote ([object]))}, :name devtools.formatters.markup/<native-reference>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 25, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, <reference-surrogate> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 51, :column 7, :end-line 51, :end-column 28, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<reference-surrogate>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, <keyword> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 76, :column 7, :end-line 76, :end-column 16, :arglists (quote ([keyword]))}, :name devtools.formatters.markup/<keyword>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 16, :method-params ([keyword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keyword]))}, print-via-writer {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 29, :column 7, :end-line 29, :end-column 23, :arglists (quote ([value tag & [max-level]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(value tag [max-level])], :arglists ([value tag & [max-level]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/print-via-writer, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(value tag [max-level])], :arglists ([value tag & [max-level]]), :arglists-meta (nil)}, :method-params [(value tag [max-level])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists ([value tag & [max-level]])}, <protocol-method-arities> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 287, :column 7, :end-line 287, :end-column 32, :arglists (quote ([fns & [max-fns]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fns [max-fns])], :arglists ([fns & [max-fns]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<protocol-method-arities>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 32, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fns [max-fns])], :arglists ([fns & [max-fns]]), :arglists-meta (nil)}, :method-params [(fns [max-fns])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists ([fns & [max-fns]])}, <surrogate-header> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 404, :column 7, :end-line 404, :end-column 25, :arglists (quote ([surrogate]))}, :name devtools.formatters.markup/<surrogate-header>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 25, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, <details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 170, :column 7, :end-line 170, :end-column 16, :arglists (quote ([value starting-index]))}, :name devtools.formatters.markup/<details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 16, :method-params ([value starting-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value starting-index]))}, <more-protocols> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 324, :column 7, :end-line 324, :end-column 23, :arglists (quote ([more-count]))}, :name devtools.formatters.markup/<more-protocols>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 23, :method-params ([more-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 1, :fn-var true, :arglists (quote ([more-count]))}, <field> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 339, :column 7, :end-line 339, :end-column 14, :arglists (quote ([name value]))}, :name devtools.formatters.markup/<field>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 14, :method-params ([name value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name value]))}, <symbol> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 79, :column 7, :end-line 79, :end-column 15, :arglists (quote ([symbol]))}, :name devtools.formatters.markup/<symbol>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 15, :method-params ([symbol]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([symbol]))}, <fields-details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 369, :column 7, :end-line 369, :end-column 23, :arglists (quote ([fields obj]))}, :name devtools.formatters.markup/<fields-details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 23, :method-params ([fields obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fields obj]))}, <atomic> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 423, :column 7, :end-line 423, :end-column 15, :arglists (quote ([value]))}, :name devtools.formatters.markup/<atomic>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 15, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, <string> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 89, :column 7, :end-line 89, :end-column 15, :arglists (quote ([string]))}, :name devtools.formatters.markup/<string>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 15, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, <standard-body> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 125, :column 7, :end-line 125, :end-column 22, :arglists (quote ([markups-lists & [no-margin?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(markups-lists [no-margin?])], :arglists ([markups-lists & [no-margin?]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<standard-body>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(markups-lists [no-margin?])], :arglists ([markups-lists & [no-margin?]]), :arglists-meta (nil)}, :method-params [(markups-lists [no-margin?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists ([markups-lists & [no-margin?]])}, <type-basis> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 254, :column 7, :end-line 254, :end-column 19, :arglists (quote ([basis]))}, :name devtools.formatters.markup/<type-basis>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 19, :method-params ([basis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([basis]))}, *markup-db* {:name devtools.formatters.markup/*markup-db*, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 437, :column 1, :end-line 437, :end-column 27, :dynamic true, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 437, :column 16, :end-line 437, :end-column 27, :dynamic true}}, print-via-protocol {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 32, :column 7, :end-line 32, :end-column 25, :arglists (quote ([value tag & [max-level]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(value tag [max-level])], :arglists ([value tag & [max-level]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/print-via-protocol, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(value tag [max-level])], :arglists ([value tag & [max-level]]), :arglists-meta (nil)}, :method-params [(value tag [max-level])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists ([value tag & [max-level]])}, print-with {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([method value tag & [max-level]])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(method value tag [max-level])], :arglists ([method value tag & [max-level]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/print-with, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(method value tag [max-level])], :arglists ([method value tag & [max-level]]), :arglists-meta (nil)}, :method-params [(method value tag [max-level])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists ([method value tag & [max-level]])}, <bool> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 73, :column 7, :end-line 73, :end-column 13, :arglists (quote ([bool]))}, :name devtools.formatters.markup/<bool>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 13, :method-params ([bool]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bool]))}, <standalone-type> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 276, :column 7, :end-line 276, :end-column 24, :arglists (quote ([constructor-fn & [header-tag]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(constructor-fn [header-tag])], :arglists ([constructor-fn & [header-tag]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<standalone-type>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(constructor-fn [header-tag])], :arglists ([constructor-fn & [header-tag]]), :arglists-meta (nil)}, :method-params [(constructor-fn [header-tag])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists ([constructor-fn & [header-tag]])}, <preview> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 110, :column 7, :end-line 110, :end-column 16, :arglists (quote ([value]))}, :name devtools.formatters.markup/<preview>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 16, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, <header> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 401, :column 7, :end-line 401, :end-column 15, :arglists (quote ([value]))}, :name devtools.formatters.markup/<header>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 15, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 401, :end-line 401, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, <protocol-method> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 300, :column 7, :end-line 300, :end-column 24, :arglists (quote ([name arities]))}, :name devtools.formatters.markup/<protocol-method>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 24, :method-params ([name arities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name arities]))}, <cljs-land> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([& children])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<cljs-land>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}, :method-params [(children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists ([& children])}, <type-basis-item> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 251, :column 7, :end-line 251, :end-column 24, :arglists (quote ([basis-item]))}, :name devtools.formatters.markup/<type-basis-item>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 24, :method-params ([basis-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 1, :fn-var true, :arglists (quote ([basis-item]))}, <protocol-method-arities-details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 284, :column 7, :end-line 284, :end-column 40, :arglists (quote ([fns]))}, :name devtools.formatters.markup/<protocol-method-arities-details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 40, :method-params ([fns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fns]))}, <fields-details-row> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 346, :column 7, :end-line 346, :end-column 27, :arglists (quote ([field]))}, :name devtools.formatters.markup/<fields-details-row>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 27, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field]))}, <standard-body-reference> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 134, :column 7, :end-line 134, :end-column 32, :arglists (quote ([o]))}, :name devtools.formatters.markup/<standard-body-reference>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 32, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, <surrogate-body> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 415, :column 7, :end-line 415, :end-column 23, :arglists (quote ([surrogate]))}, :name devtools.formatters.markup/<surrogate-body>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 23, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 415, :end-line 415, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, get-markup-db {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 449, :column 7, :end-line 449, :end-column 20, :arglists (quote ([]))}, :name devtools.formatters.markup/get-markup-db, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 449, :end-line 449, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, <expandable> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 37, :column 7, :end-line 37, :end-column 19, :arglists (quote ([& children])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<expandable>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}, :method-params [(children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists ([& children])}, <type> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 267, :column 7, :end-line 267, :end-column 13, :arglists (quote ([constructor-fn & [header-tag]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(constructor-fn [header-tag])], :arglists ([constructor-fn & [header-tag]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<type>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(constructor-fn [header-tag])], :arglists ([constructor-fn & [header-tag]]), :arglists-meta (nil)}, :method-params [(constructor-fn [header-tag])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 1, :fn-var true, :arglists ([constructor-fn & [header-tag]])}, <protocol-method-arity> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 281, :column 7, :end-line 281, :end-column 30, :arglists (quote ([arity-fn]))}, :name devtools.formatters.markup/<protocol-method-arity>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 30, :method-params ([arity-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arity-fn]))}, <raw-surrogate> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<raw-surrogate>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, <type-details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 259, :column 7, :end-line 259, :end-column 21, :arglists (quote ([constructor-fn ns _name basis]))}, :name devtools.formatters.markup/<type-details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 21, :method-params ([constructor-fn ns _name basis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 4, :fn-var true, :arglists (quote ([constructor-fn ns _name basis]))}, <list> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 182, :column 7, :end-line 182, :end-column 13, :arglists (quote ([items max-count & [opts]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(items max-count [opts])], :arglists ([items max-count & [opts]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<list>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(items max-count [opts])], :arglists ([items max-count & [opts]]), :arglists-meta (nil)}, :method-params [(items max-count [opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists ([items max-count & [opts]])}, <meta-wrapper> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 211, :column 7, :end-line 211, :end-column 21, :arglists (quote ([metadata & children])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(metadata children)], :arglists ([metadata & children]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<meta-wrapper>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(metadata children)], :arglists ([metadata & children]), :arglists-meta (nil)}, :method-params [(metadata children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists ([metadata & children])}, <protocol> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 315, :column 7, :end-line 315, :end-column 17, :arglists (quote ([obj protocol & [tag]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(obj protocol [tag])], :arglists ([obj protocol & [tag]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<protocol>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(obj protocol [tag])], :arglists ([obj protocol & [tag]]), :arglists-meta (nil)}, :method-params [(obj protocol [tag])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 2, :fn-var true, :arglists ([obj protocol & [tag]])}, <index> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 139, :column 7, :end-line 139, :end-column 14, :arglists (quote ([value]))}, :name devtools.formatters.markup/<index>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 14, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, <surrogate> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([& [object header body start-index]])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([object header body start-index])], :arglists ([& [object header body start-index]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<surrogate>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([object header body start-index])], :arglists ([& [object header body start-index]]), :arglists-meta (nil)}, :method-params [([object header body start-index])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists ([& [object header body start-index]])}, <protocols-list> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 328, :column 7, :end-line 328, :end-column 23, :arglists (quote ([obj protocols & [max-protocols]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(obj protocols [max-protocols])], :arglists ([obj protocols & [max-protocols]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<protocols-list>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(obj protocols [max-protocols])], :arglists ([obj protocols & [max-protocols]]), :arglists-meta (nil)}, :method-params [(obj protocols [max-protocols])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 328, :end-line 328, :max-fixed-arity 2, :fn-var true, :arglists ([obj protocols & [max-protocols]])}, <meta> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 206, :column 7, :end-line 206, :end-column 13, :arglists (quote ([metadata]))}, :name devtools.formatters.markup/<meta>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 13, :method-params ([metadata]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([metadata]))}, <instance> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 380, :column 7, :end-line 380, :end-column 17, :arglists (quote ([value]))}, :name devtools.formatters.markup/<instance>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 380, :end-line 380, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, <reference> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 48, :column 7, :end-line 48, :end-column 18, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<reference>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, <function-details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 216, :column 7, :end-line 216, :end-column 25, :arglists (quote ([fn-obj ns _name arities prefix]))}, :name devtools.formatters.markup/<function-details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 25, :method-params ([fn-obj ns _name arities prefix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 5, :fn-var true, :arglists (quote ([fn-obj ns _name arities prefix]))}, <function> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 233, :column 7, :end-line 233, :end-column 17, :arglists (quote ([fn-obj]))}, :name devtools.formatters.markup/<function>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 17, :method-params ([fn-obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn-obj]))}, <arities> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 227, :column 7, :end-line 227, :end-column 16, :arglists (quote ([arities]))}, :name devtools.formatters.markup/<arities>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 16, :method-params ([arities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arities]))}, <header-expander> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 61, :column 7, :end-line 61, :end-column 24, :arglists (quote ([object]))}, :name devtools.formatters.markup/<header-expander>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 24, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, <list-details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 179, :column 7, :end-line 179, :end-column 21, :arglists (quote ([items _opts]))}, :name devtools.formatters.markup/<list-details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 21, :method-params ([items _opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([items _opts]))}, <circular-reference> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 54, :column 7, :end-line 54, :end-column 27, :arglists (quote ([& children])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<circular-reference>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}, :method-params [(children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists ([& children])}, <surrogate-target> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 408, :column 7, :end-line 408, :end-column 25, :arglists (quote ([surrogate]))}, :name devtools.formatters.markup/<surrogate-target>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 25, :method-params ([surrogate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 408, :end-line 408, :max-fixed-arity 1, :fn-var true, :arglists (quote ([surrogate]))}, body-line {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 142, :column 8, :end-line 142, :end-column 17, :private true, :arglists (quote ([index value]))}, :private true, :name devtools.formatters.markup/body-line, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 17, :method-params ([index value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([index value]))}, body-lines {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 156, :column 8, :end-line 156, :end-column 18, :private true, :arglists (quote ([value starting-index]))}, :private true, :name devtools.formatters.markup/body-lines, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 18, :method-params ([value starting-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value starting-index]))}, <fields> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 357, :column 7, :end-line 357, :end-column 15, :arglists (quote ([fields & [max-fields]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fields [max-fields])], :arglists ([fields & [max-fields]]), :arglists-meta (nil)}}, :name devtools.formatters.markup/<fields>, :variadic true, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fields [max-fields])], :arglists ([fields & [max-fields]]), :arglists-meta (nil)}, :method-params [(fields [max-fields])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 357, :end-line 357, :max-fixed-arity 1, :fn-var true, :arglists ([fields & [max-fields]])}, <nil> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 69, :column 7, :end-line 69, :end-column 12, :arglists (quote ([]))}, :name devtools.formatters.markup/<nil>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, <body> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 115, :column 7, :end-line 115, :end-column 13, :arglists (quote ([markup]))}, :name devtools.formatters.markup/<body>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 13, :method-params ([markup]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([markup]))}, <number> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 82, :column 7, :end-line 82, :end-column 15, :arglists (quote ([number]))}, :name devtools.formatters.markup/<number>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 15, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, <protocol-details> {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 306, :column 7, :end-line 306, :end-column 25, :arglists (quote ([obj ns _name selector _fast?]))}, :name devtools.formatters.markup/<protocol-details>, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 25, :method-params ([obj ns _name selector _fast?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 306, :end-line 306, :max-fixed-arity 5, :fn-var true, :arglists (quote ([obj ns _name selector _fast?]))}, prepare-body-lines {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/formatters/markup.cljs", :line 148, :column 8, :end-line 148, :end-column 26, :private true, :arglists (quote ([data starting-index]))}, :private true, :name devtools.formatters.markup/prepare-body-lines, :variadic false, :file "resources/public/js/compiled/out/devtools/formatters/markup.cljs", :end-column 26, :method-params ([data starting-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data starting-index]))}}, :require-macros {devtools.util devtools.util, devtools.formatters.markup devtools.formatters.markup, munging devtools.munging, devtools.munging devtools.munging}, :cljs.analyzer/constants {:seen #{:protocol-method-arities-header-close-symbol :protocol-details :max-number-body-items :meta-reference-tag :instance-custom-printing-tag :type-header-background :body-field-symbol :body-items-more-tag :line-index-separator :new-line-string-replacer :selector :more-fields-symbol :body-field-value-spacer :standard-body :protocol-background :protocols-icon :standalone-type :standard-ol-no-margin-tag :symbol-tag :render-keywords :fn-header-tag :keyword-tag :protocol-method-arities :surrogate :fields-header-tag :meta :aligned-body :body-items-more-label :nil-tag :index :instance :float-tag :protocol-ns-name-tag :protocol-method :protocol-method-arities-details :protocol-method-arities-more-symbol :number :index-tag :rest-symbol :protocol :protocols-list-close-symbol :protocol-name-tag :protocol-method-arity :more-protocols :instance-header-background :body-tag :cljs-land-tag :max-list-protocols :string-abbreviation-marker :native-icon :instance-body-fields-table-tag :render-symbols :ns :symbol :fields-details-row :name :type-name-tag :list-separator :header-field-value-spacer :fast-protocol-tag :render-strings :standalone-type-tag :type-header-tag :lambda-icon :render-functions :fields-header-open-symbol :fields :type-details :fn-name-tag :protocols-list :header-field-value-tag :fields-icon :type-wrapper-tag :field :type :standard-li-tag :type-basis-item :render-bools :dq :fields-header-no-fields-symbol :nil-label :meta-wrapper :protocols-list-open-symbol :list-open-symbol :raw-surrogate :header-field-separator :function-details :body-field-td3-tag :string :surrogate-header :more-symbol :native-reference :header :string-tag :meta-wrapper-tag :method-icon :function :max-protocol-method-arities-list :reference-surrogate :header-protocol-separator :basis-icon :surrogate-body :fn-args-tag :bool-tag :expandable-inner-tag :fn-prefix-tag :type-basis-item-tag :fn-ns-name-tag :header-tag :body-field-name-tag :open-symbol :protocol-method-arities-header-open-symbol :expanded-string-tag :protocol-more-tag :reference :meta-body-tag :instance-custom-printing-background :preview :fast? :native-reference-background :details :instance-type-header-tag :list :keyword :spacer :body-field-tr-tag :surrogate-target :header-field-name-tag :standard-li-no-margin-tag :list-tag :body-field-td1-tag :nil :render-types :string-postfix-limit :protocol-method-arities-list-header-separator :protocol-method-tag :fields-details :list-close-symbol :render-numbers :circular-reference :expandable :body-field-value-tag :empty-basis-symbol :list-details :fn-icon :integer-tag :type-basis-item-separator :protocols-header-tag :protocol-method-name-tag :item-tag :instance-value-tag :circular-ref-icon :standard-ol-tag :standard-body-reference :tag :circular-reference-body-tag :bool :native-reference-tag :target :type-basis :aligned-li-tag :render-instances :expandable-symbol :fn-multi-arity-args-indent-tag :expandable-tag :protocol-method-arities-header-tag :max-instance-header-fields :arities :type-ref-tag :max-print-level :multi-arity-symbol :render-nils :meta-header-tag :body :separator :slow-protocol-tag :header-field-tag :native-reference-wrapper-tag :fields-header-close-symbol :string-prefix-limit :instance-custom-printing-wrapper-tag :body-field-td2-tag :atomic :type-basis-tag :close-symbol :type-symbol :instance-header-tag :header-expander :ns-icon :body-line-max-print-level :circular-reference-tag :header-expander-symbol :cljs-land}, :order [:expandable-inner-tag :expandable-tag :expandable-symbol :circular-reference-tag :circular-ref-icon :circular-reference-body-tag :native-reference-wrapper-tag :native-reference-background :native-reference-tag :header-expander-symbol :target :cljs-land-tag :nil-tag :nil-label :bool-tag :keyword-tag :symbol-tag :integer-tag :float-tag :dq :new-line-string-replacer :string-prefix-limit :string-postfix-limit :string-abbreviation-marker :string-tag :expanded-string-tag :header-tag :max-print-level :body-tag :aligned-li-tag :standard-ol-no-margin-tag :standard-ol-tag :standard-li-no-margin-tag :standard-li-tag :index-tag :line-index-separator :item-tag :body-line-max-print-level :max-number-body-items :body-items-more-tag :body-items-more-label :separator :list-separator :more-symbol :tag :list-tag :open-symbol :list-open-symbol :close-symbol :list-close-symbol :details :meta-body-tag :meta-header-tag :meta-reference-tag :meta-wrapper-tag :fn-multi-arity-args-indent-tag :fn-args-tag :ns-icon :fn-ns-name-tag :native-icon :multi-arity-symbol :spacer :rest-symbol :fn-name-tag :lambda-icon :fn-icon :fn-prefix-tag :fn-header-tag :type-basis-item-tag :type-basis-item-separator :type-basis-tag :empty-basis-symbol :basis-icon :type-name-tag :type-header-tag :type-symbol :type-wrapper-tag :type-header-background :type-ref-tag :standalone-type-tag :max-protocol-method-arities-list :protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol :protocol-method-arities-list-header-separator :protocol-method-arities-more-symbol :protocol-method-arities-header-close-symbol :protocol-method-tag :method-icon :protocol-method-name-tag :protocol-ns-name-tag :ns :name :selector :fast? :protocol-name-tag :fast-protocol-tag :slow-protocol-tag :protocol-background :protocol-more-tag :max-list-protocols :protocols-header-tag :protocols-list-open-symbol :protocols-list-close-symbol :header-protocol-separator :header-field-tag :header-field-name-tag :header-field-value-spacer :header-field-value-tag :header-field-separator :body-field-tr-tag :body-field-td1-tag :body-field-symbol :body-field-name-tag :body-field-td2-tag :body-field-value-spacer :body-field-td3-tag :body-field-value-tag :fields-header-tag :fields-header-no-fields-symbol :max-instance-header-fields :fields-header-open-symbol :more-fields-symbol :fields-header-close-symbol :fields-icon :instance-body-fields-table-tag :protocols-icon :instance-type-header-tag :instance-value-tag :instance-custom-printing-wrapper-tag :instance-custom-printing-background :instance-custom-printing-tag :instance-header-tag :instance-header-background :render-nils :render-bools :render-strings :render-numbers :render-keywords :render-symbols :render-instances :render-types :render-functions :aligned-body :native-reference :reference-surrogate :keyword :protocol-method-arities :surrogate-header :more-protocols :field :symbol :fields-details :atomic :string :standard-body :type-basis :bool :standalone-type :preview :header :protocol-method :cljs-land :type-basis-item :protocol-method-arities-details :fields-details-row :standard-body-reference :surrogate-body :expandable :type :protocol-method-arity :raw-surrogate :type-details :list :meta-wrapper :protocol :index :surrogate :protocols-list :meta :instance :reference :function-details :function :arities :header-expander :list-details :circular-reference :surrogate-target :fields :nil :body :number :protocol-details]}, :doc nil}