{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name devtools.prefs, :imports nil, :requires {defaults devtools.defaults, devtools.defaults devtools.defaults}, :uses nil, :defs {*prefs* {:name devtools.prefs/*prefs*, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :line 4, :column 1, :end-line 4, :end-column 23, :dynamic true, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 4, :column 16, :end-line 4, :end-column 23, :dynamic true}, :tag cljs.core/IMap}, get-prefs {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([]))}, :name devtools.prefs/get-prefs, :variadic false, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pref {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 9, :column 7, :end-line 9, :end-column 11, :arglists (quote ([key]))}, :name devtools.prefs/pref, :variadic false, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :end-column 11, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, set-prefs! {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([new-prefs]))}, :name devtools.prefs/set-prefs!, :variadic false, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :end-column 17, :method-params ([new-prefs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-prefs]))}, set-pref! {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([key val]))}, :name devtools.prefs/set-pref!, :variadic false, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :end-column 16, :method-params ([key val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key val]))}, merge-prefs! {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([m]))}, :name devtools.prefs/merge-prefs!, :variadic false, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :end-column 19, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, update-pref! {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/devtools/prefs.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([key f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(key f args)], :arglists ([key f & args]), :arglists-meta (nil)}}, :name devtools.prefs/update-pref!, :variadic true, :file "resources/public/js/compiled/out/devtools/prefs.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(key f args)], :arglists ([key f & args]), :arglists-meta (nil)}, :method-params [(key f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists ([key f & args])}}, :require-macros {defaults devtools.defaults, devtools.defaults devtools.defaults}, :doc nil}