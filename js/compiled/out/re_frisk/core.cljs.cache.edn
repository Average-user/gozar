{:rename-macros {}, :renames {}, :externs {document {createElement {}, body {appendChild {}}}, window {onbeforeunload {}}, setTimeout {}}, :use-macros {reaction reagent.ratom}, :excludes #{}, :name re-frisk.core, :imports nil, :requires {re-frisk.devtool re-frisk.devtool, re-frisk.ui re-frisk.ui, reagent.ratom reagent.ratom, reagent.core reagent.core, r reagent.core, re-frame.registrar re-frame.registrar, re-frisk.data re-frisk.data, rfr re-frame.core, re-frisk.help re-frisk.help, ui re-frisk.ui, h re-frisk.help, re-frame.core re-frame.core, d re-frisk.devtool}, :uses {subscribe re-frame.core, re-frame-events re-frisk.data, reg-sub re-frame.core, deb-data re-frisk.data, re-frame-data re-frisk.data, reg-event-db re-frame.core, kind->id->handler re-frame.registrar, initialized re-frisk.data}, :defs {post-event-callback {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 11, :column 7, :end-line 11, :end-column 26, :arglists (quote ([value]))}, :name re-frisk.core/post-event-callback, :variadic false, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 26, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, render-re-frisk {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 18, :column 8, :end-line 18, :end-column 23, :private true, :arglists (quote ([params]))}, :private true, :name re-frisk.core/render-re-frisk, :variadic false, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 23, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params]))}, enable-re-frisk! {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 24, :column 7, :end-line 24, :end-column 23, :arglists (quote ([& params])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}}, :name re-frisk.core/enable-re-frisk!, :variadic true, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}, :method-params [(params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists ([& params])}, enable-frisk! {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 60, :column 7, :end-line 60, :end-column 20, :arglists (quote ([& params])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}}, :name re-frisk.core/enable-frisk!, :variadic true, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(params)], :arglists ([& params]), :arglists-meta (nil)}, :method-params [(params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists ([& params])}, add-data {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 66, :column 7, :end-line 66, :end-column 15, :arglists (quote ([key data]))}, :name re-frisk.core/add-data, :variadic false, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 15, :method-params ([key data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key data]))}, add-in-data {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([keys data]))}, :name re-frisk.core/add-in-data, :variadic false, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 18, :method-params ([keys data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keys data]))}, watch-context {:name re-frisk.core/watch-context, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :line 72, :column 1, :end-line 72, :end-column 19, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 72, :column 6, :end-line 72, :end-column 19}, :tag any}, reg-view {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 79, :column 7, :end-line 79, :end-column 15, :arglists (quote ([view subs events]))}, :name re-frisk.core/reg-view, :variadic false, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 15, :method-params ([view subs events]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 3, :fn-var true, :arglists (quote ([view subs events]))}, unmount-view {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frisk/core.cljs", :line 87, :column 7, :end-line 87, :end-column 19, :arglists (quote ([view]))}, :name re-frisk.core/unmount-view, :variadic false, :file "resources/public/js/compiled/out/re_frisk/core.cljs", :end-column 19, :method-params ([view]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([view]))}}, :require-macros {r reagent.core, reagent.core reagent.core, reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:else :fx-handler :sub :events :do-fx :re-frisk/update-db :handlers :on-click :db-handler :event :after :id :re-frisk.core/db :events? :re-frisk-watch-context :coeffects :subs :contexts :prefs :cofx :fx :before :app-db :views :win}, :order [:contexts :event :win :on-click :id :coeffects :do-fx :db-handler :fx-handler :else :before :after :re-frisk/update-db :re-frisk.core/db :sub :handlers :app-db :fx :cofx :prefs :events? :re-frisk-watch-context :views :events :subs]}, :doc nil}