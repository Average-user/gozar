{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name gozar.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-frame re-frame.core, re-frame.core re-frame.core, re-frisk.core re-frisk.core, views gozar.views, gozar.views gozar.views, config gozar.config, gozar.config gozar.config}, :uses {enable-re-frisk! re-frisk.core}, :defs {dev-setup {:protocol-inline nil, :meta {:file "/home/average-user/Dropbox/Clojure/gozar/src/cljs/gozar/core.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([]))}, :name gozar.core/dev-setup, :variadic false, :file "src/cljs/gozar/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/home/average-user/Dropbox/Clojure/gozar/src/cljs/gozar/core.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([]))}, :name gozar.core/mount-root, :variadic false, :file "src/cljs/gozar/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/average-user/Dropbox/Clojure/gozar/src/cljs/gozar/core.cljs", :line 20, :column 16, :end-line 20, :end-column 20, :export true, :arglists (quote ([]))}, :name gozar.core/init, :variadic false, :file "src/cljs/gozar/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :doc nil}