{:rename-macros {}, :renames {}, :externs {Error {}, FileReader {prototype {onload {}, readAsText {}}}, parseInt {}, window {}}, :use-macros {}, :excludes #{}, :name gozar.views, :imports nil, :requires {u gozar.util, gozar.sgfparser gozar.sgfparser, reagent.core reagent.core, r reagent.core, gozar.util gozar.util, events goog.events, parser gozar.sgfparser, goog.events goog.events, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {distance {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 10, :column 7, :end-line 10, :end-column 15, :arglists (quote ([[a b] [c d]]))}, :name gozar.views/distance, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 15, :method-params ([p__12462 p__12463]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b] [c d]]))}, how-close-bar {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 156, :column 7, :end-line 156, :end-column 20, :arglists (quote ([]))}, :name gozar.views/how-close-bar, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-stones {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([f {:keys [stones turn]}]))}, :name gozar.views/draw-stones, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 18, :method-params ([f p__12484]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f {:keys [stones turn]}]))}, get-moves {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([]))}, :name gozar.views/get-moves, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, r {:name gozar.views/r, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 8, :column 1, :end-line 8, :end-column 7, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 8, :column 6, :end-line 8, :end-column 7}, :tag number}, main-panel {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 180, :column 7, :end-line 180, :end-column 17, :arglists (quote ([]))}, :name gozar.views/main-panel, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sgf-file-input {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 75, :column 7, :end-line 75, :end-column 21, :arglists (quote ([]))}, :name gozar.views/sgf-file-input, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-move {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 14, :column 7, :end-line 14, :end-column 15, :arglists (quote ([]))}, :name gozar.views/get-move, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, info-table {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 109, :column 7, :end-line 109, :end-column 17, :arglists (quote ([]))}, :name gozar.views/info-table, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, analyze-mode-checkbox {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 150, :column 7, :end-line 150, :end-column 28, :arglists (quote ([]))}, :name gozar.views/analyze-mode-checkbox, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, board-svg {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 64, :column 7, :end-line 64, :end-column 16, :arglists (quote ([]))}, :name gozar.views/board-svg, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-board-base {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 56, :column 7, :end-line 56, :end-column 22, :arglists (quote ([{:keys [stones], :as board} amplifier]))}, :name gozar.views/draw-board-base, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 22, :method-params ([p__12508 amplifier]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [stones], :as board} amplifier]))}, moves-range {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 129, :column 7, :end-line 129, :end-column 18, :arglists (quote ([]))}, :name gozar.views/moves-range, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-line {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([x1 y1 x2 y2 f]))}, :name gozar.views/draw-line, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 16, :method-params ([x1 y1 x2 y2 f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x1 y1 x2 y2 f]))}, draw-dots {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :line 28, :column 7, :end-line 28, :end-column 16, :arglists (quote ([f]))}, :name gozar.views/draw-dots, :variadic false, :file "/home/lucas/Dropbox/Clojure/gozar/src/cljs/gozar/views.cljs", :end-column 16, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :thead :a.icon :i.fa.fa-arrow-right :span.file-icon :min :r :div.columns :stroke :change-of-file :table.table :analyze-mode-change :circle.w :span.icon.is-small :komi :h1.title.is-1 :stones :white :else :custom-move :progress.progress.is-success :div.file.has-name :moves :content :i.fa.fa-arrow-left :span.file-label :fill :margin-left :value :th :handicap :tr :span.file-cta :circle :y1 :margin-top :add-custom-move :progress.progress.is-danger :width :move :type :abbr :label.file-label :view-box :a.button :tfoot :on-click :custom-moves :circle.b :center :style :div :turn :inc-move :g :filename :div.column :dec-move :line :stroke-width :result :i.fas.fa-upload :max :cx :cy :span.file-name :svg :info :circle.n :div.field :input.file-input :set-attempt-to :player :change-move :x :analyze-mode :x1 :input :y2 :on-change :location :attempt :rect :button.button :x2 :div.column.is-half :href :player-white :handicap-n :height :board :player-black :accept :span :margin}, :order [:analyze-mode :custom-move :move :custom-moves :moves :line :x1 :y1 :x2 :y2 :style :stroke :stroke-width :circle :cx :cy :r :fill :stones :turn :location :g :circle.n :on-click :add-custom-move :player :inc-move :set-attempt-to :else :white :circle.w :circle.b :rect :x :y :width :height :div.field :margin-top :svg :view-box :board :div.file.has-name :label.file-label :input.file-input :type :accept :on-change :handicap :komi :change-of-file :result :player-black :player-white :handicap-n :span.file-cta :span.file-icon :i.fas.fa-upload :span.file-label :span.file-name :filename :info :table.table :thead :tr :th :abbr :tfoot :center :input :min :max :value :change-move :span :div :a.button :dec-move :span.icon.is-small :i.fa.fa-arrow-left :i.fa.fa-arrow-right :button.button :analyze-mode-change :attempt :progress.progress.is-success :progress.progress.is-danger :div.columns :margin-left :div.column.is-half :margin :h1.title.is-1 :a.icon :href :content :div.column]}, :doc nil}