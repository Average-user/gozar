{:rename-macros {}, :renames {}, :externs {console {log {bind {}}, warn {bind {}}, error {bind {}}, group {bind {}}, groupEnd {bind {}}}, Error {}}, :use-macros {difference clojure.set}, :excludes #{}, :name re-frame.loggers, :imports nil, :requires {clojure.set clojure.set}, :uses {difference clojure.set}, :defs {loggers {:meta {:file "/home/average-user/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/loggers.cljc", :line 14, :column 16, :end-line 14, :end-column 23, :private true}, :private true, :name re-frame.loggers/loggers, :file "resources/public/js/compiled/out/re_frame/loggers.cljc", :end-column 23, :column 1, :line 14, :end-line 14, :tag any, :doc "Holds the current set of logging functions.\n   By default, re-frame uses the functions provided by js/console.\n   Use `set-loggers!` to change these defaults\n  "}, console {:protocol-inline nil, :meta {:file "/home/average-user/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/loggers.cljc", :line 35, :column 7, :end-line 35, :end-column 14, :arglists (quote ([level & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(level args)], :arglists ([level & args]), :arglists-meta (nil)}}, :name re-frame.loggers/console, :variadic true, :file "resources/public/js/compiled/out/re_frame/loggers.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(level args)], :arglists ([level & args]), :arglists-meta (nil)}, :method-params [(level args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists ([level & args])}, set-loggers! {:protocol-inline nil, :meta {:file "/home/average-user/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/loggers.cljc", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([new-loggers])), :doc "Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"}, :name re-frame.loggers/set-loggers!, :variadic false, :file "resources/public/js/compiled/out/re_frame/loggers.cljc", :end-column 19, :method-params ([new-loggers]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-loggers])), :doc "Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"}, get-loggers {:protocol-inline nil, :meta {:file "/home/average-user/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/loggers.cljc", :line 48, :column 7, :end-line 48, :end-column 18, :arglists (quote ([])), :doc "Get the current logging functions used by re-frame."}, :name re-frame.loggers/get-loggers, :variadic false, :file "resources/public/js/compiled/out/re_frame/loggers.cljc", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Get the current logging functions used by re-frame."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:group :warn :error :groupEnd :log}, :order [:log :warn :error :group :groupEnd]}, :doc nil}