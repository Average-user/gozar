{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name re-frame.registrar, :imports nil, :requires {re-frame.interop re-frame.interop, re-frame.loggers re-frame.loggers}, :uses {console re-frame.loggers, debug-enabled? re-frame.interop}, :defs {kinds {:name re-frame.registrar/kinds, :file "resources/public/js/compiled/out/re_frame/registrar.cljc", :line 10, :column 1, :end-line 10, :end-column 11, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/registrar.cljc", :line 10, :column 6, :end-line 10, :end-column 11}, :tag cljs.core/ISet}, kind->id->handler {:name re-frame.registrar/kind->id->handler, :file "resources/public/js/compiled/out/re_frame/registrar.cljc", :line 15, :column 1, :end-line 15, :end-column 23, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/registrar.cljc", :line 15, :column 6, :end-line 15, :end-column 23}, :tag any}, get-handler {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/registrar.cljc", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([kind] [kind id] [kind id required?])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([kind] [kind id] [kind id required?]), :arglists ([kind] [kind id] [kind id required?]), :arglists-meta (nil nil nil)}}, :name re-frame.registrar/get-handler, :variadic false, :file "resources/public/js/compiled/out/re_frame/registrar.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([kind] [kind id] [kind id required?]), :arglists ([kind] [kind id] [kind id required?]), :arglists-meta (nil nil nil)}, :method-params ([kind] [kind id] [kind id required?]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists ([kind] [kind id] [kind id required?])}, register-handler {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/registrar.cljc", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([kind id handler-fn]))}, :name re-frame.registrar/register-handler, :variadic false, :file "resources/public/js/compiled/out/re_frame/registrar.cljc", :end-column 23, :method-params ([kind id handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kind id handler-fn]))}, clear-handlers {:protocol-inline nil, :meta {:file "/home/lucas/Dropbox/Clojure/gozar/resources/public/js/compiled/out/re_frame/registrar.cljc", :line 44, :column 7, :end-line 44, :end-column 21, :arglists (quote ([] [kind] [kind id])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [kind] [kind id]), :arglists ([] [kind] [kind id]), :arglists-meta (nil nil nil)}}, :name re-frame.registrar/clear-handlers, :variadic false, :file "resources/public/js/compiled/out/re_frame/registrar.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [kind] [kind id]), :arglists ([] [kind] [kind id]), :arglists-meta (nil nil nil)}, :method-params ([] [kind] [kind id]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists ([] [kind] [kind id])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:sub :warn :event :error :cofx :fx}, :order [:sub :event :cofx :fx :error :warn]}, :doc "In many places, re-frame asks you to associate an `id` (keyword)\n  with a `handler` (function).  This namespace contains the\n  central registry of such associations."}